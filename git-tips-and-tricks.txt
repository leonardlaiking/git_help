*Git Useful Commands:*
git stash
git stash pop
git pull -p # Removes remote tracking branches that have no upstream
git cherry-pick <sha>
git remote prune origin
git remote prune origin --dry-run
git branch -a
git branch -d the_local_branch
git reset --hard origin/master
git config --global pull.rebase true # Rebase by default when doing git pull

*Git - Permission Issue:*
If there is a restriction on commit:
1. create a temp branch (git branch feature/r15.5/Master_PROD_Merge)
2. configure upstream and push (git push --set-upstream origin feature/r15.5/Master_PROD_Merge)
3. create pull request as usual 

*Git ssh:*
Saves time typing password each time
1. eval $(ssh-agent)
2. ssh-add

*Git branch Rename:*
(https://gist.github.com/lttlrck/9628955)
1. git branch -m old_branch new_branch         # Rename branch locally     
2. git push origin :old_branch                 # Delete the old branch     
3. git push --set-upstream origin new_branch   # Push the new branch, set local branch to track the new remote 

*Git Error (unable to update local ref) / Git Cleanup:*
Try cleaning-up your local repository with:
$ git gc --prune=now
$ git remote prune origin

*Git Reset Remote Repository*
1.Delete the .git directory locally.
2.Recreate the git repostory:
$ cd (project-directory)
$ git init$ (add some files)
$ git add .
$ git commit -m 'Initial commit'
3.Push to remote server, overwriting. Remember you're going to mess everyone else up doing this … you better be the only client.
$ git remote add origin <url>
$ git push --force --set-upstream origin master

*Git Create tag from Commit*
$ git tag -a v1.2 9fceb02 -m "Message here"then push to origin
$ git push --tags origin master

*Git Remove Tags*
1. git tag -d 123452. git push origin :refs/tags/12345

